# Danh sách thiết bị:
    Công tắc
        Công tắc Homegy
        Công tắc rèm
    Đèn
        Đèn HG Skylight
        Đèn CT Rạng đông
        Đèn RGB Rạng đông
    Cảm biến
        Cảm biến cửa: trạng thái cửa đóng/mở, trạng thái cảm biến đã được gắn lên tường hay chưa, % pin
        Cảm biến khói: có khói hay không, % pin
        Cảm biến nhiệt độ/độ ẩm
        Cảm biến chuyển động


# Chức năng lưu lịch sử hoạt động
    Các thông tin thiết bị cần lưu:
        Thay đổi giá trị dp
        Thay đổi trạng thái online/offline
        Thêm/xóa thiết bị
        Khóa trẻ em
        Khóa hãng
        Thời gian
        Nguyên nhân làm thay đổi trạng thái (senderId nếu điều khiển từ app, sceneId nếu điều khiển từ kịch bản)
    Thông tin của từng lịch sử:
        time: Số milliseconds tính từ năm 01/01/1970
        eventType: Loại sự kiện của lịch sử:
            1: Điều khiển thiết bị
            2: Thiết bị online/offline (dpValue = 0: thiết bị offline, dpValue = 1: Thiết bị online)
            3: Thêm thiết bị
            4: Xoá thiết bị
            5: Khóa trẻ em (dpValue là index của hạt bị khóa (1, 2, 3, 4))
            6: Khóa hãng
        causeType: Nguyên nhân làm thay đổi sự kiện
            0: Người dùng bật tắt trực tiếp từ thiết bị
            1: Người dùng điều khiển từ app, trong trường hợp này causeId sẽ chứa senderId tác động
            2: Có nhóm đèn hoặc nhóm công tắc tác động, trong trường hợp này causeId sẽ chứa groupId tác động
            3: Có scene tác động, trong trường hợp này causeId sẽ chứa sceneId tác động
        causeId: chứa senderId, groupId hoặc sceneId tùy theo causeType
        deviceId: Id của thiết bị



# Chức năng enable/disable kịch bản:
    Kịch bản MANUAL: Không tắt được => khi nhận được request TYPE_CTR_SCENE thì luôn chạy kịch bản
    Kịch bản Auto: Không chạy được từ trên app => Khi nhận được request TYPE_CTR_SCENE thì luôn enable/disable kịch bản dựa vào trường 'state' gửi xuống

# Chức năng update kịch bản:
    Với kịch bản HC chỉ cần lưu lại thông tin kịch bản mới vào database
    Với kịch bản LC:
        Update actions:
            Xóa hết các actions cũ mà không có trong list actions mới
            Add các actions mới mà không có trong list actions cũ


# Những hàm cần phải free memory giá trị trả về:
    JSON_Parse()
    JSON_CreateObject()
    JSON_CreateArray()
    cJSON_Print()
    cJSON_PrintUnformatted()
    List_Create()
    String_Split()


Tính năng OTA cho HC, Gateway, devices
Enable/Disable kịch bản local
Xử lý điều kiện lớn hơn, nhỏ hơn của kịch bản HC cho cảm biến
Tính năng set độ sáng cho hạt công tắc Homegy
Tính năng ping HC từ app
Tính năng control kịch bản wifi
Tích hợp các thiết bị Homekit vào HC
[v] Tính năng scan trạng thái on/off của thiết bị (công tắc, đèn) lúc bật nguồn HC
Tính năng đồng bộ database giữa HC và cloud
Tính năng đồng bộ trạng thái bật/tắt của thiết bị và HC khi bật tắt cùng lúc làm gói tin BLE bị miss
Thêm pageIndex để quản lý danh sách thiết bị, nhóm, scene theo nhiều page
Tính năng cài đặt wifi, HomeID cho HC
Tính năng thay HC
Tính năng chạy 2 Gateway trên 1 HC
Tính năng chạy nhiều HC trong 1 nhà
Thêm chức năng của loa và nút nhấn cho HC
Test tải cho HC
Tạo file image nạp cho HC, chỉ cần nạp file này xuống board là HC sẽ chạy luôn mà không cần cài đặt gì thêm


Nguyên nhân làm đèn sáng/tắt
    Người dùng bật từ app
    Đèn nằm trong action của kịch bản local và kịch bản này được kích hoạt
    Đèn nằm trong action của kịch bản HC và kịch bản này được kích hoạt
    Đèn được thêm vào nhóm và người dùng bật nhóm từ app
    Đèn được thêm vào nhóm và nhóm đèn này nằm trong action của kịch bản local và kịch bản này được kích hoạt
    Đèn được thêm vào nhóm và nhóm đèn này nằm trong action của kịch bản HC và kịch bản này được kích hoạt



Testcases:
    Đồng bộ trạng thái thiết bị khi bật nguồn (bật HC trước, thiết bị trước hoặc bật đồng thời)
    Đồng bộ trạng thái thiết bị khi bật tắt nhóm đèn
    Đồng bộ trạng thái thiết bị khi bật tắt nhóm công tắc
    Đồng bộ trạng thái thiết bị khi điều khiển thiết bị bằng scene local



1 page sẽ có các topics:
    /get : dùng để yêu cầu aws đẩy toàn bộ data của page vào topic /get/accepted
    /get/accepted : dùng để nhận toàn bộ data của page khi có ai đó publish vào topic /get
    /update : dùng để update 1 phần data của page
    /update/accepted: dùng để nhận thông tin khi có page có thay data

Danh sách các page:
    MAIN
    DEVICE (pageIndex0)
    SCENE  (pageIndex2)
    GROUP  (pageIndex3)


Tính năng gộp bản tin update thiết bị trước khi đẩy lên aws:
    Khi thực hiện các chức năng như điều khiển nhóm, chạy kịch bản,... sẽ có rất nhiều thiết
    bị thực hiện đồng thời và gửi bản tin báo trạng thái thiết bị về HC cùng 1 lúc. Lúc này
    HC cần thực hiện gộp các bản tin lại để tránh gửi quá nhiều bản tin lên cloud cùng lúc.
    Tính năng này sẽ thực hiện trên service AWS như sau:
        - Dùng 1 JSON object g_mergePayloads để lưu trữ toàn các bản tin update device do
          service CORE gửi lên. object này có cấu trúc như sau:
            {
                "1": {
                    "A4C1383C8031": {"state": 2, "dictDPs" : {"1":1, "2":0, "3":1}},
                    "A4C1383C8032": {"state": 2, "dictDPs" : {"1":1, "2":0, "3":1}}
                },
                "2": {
                    "A4C1383C8033": {"state": 2, "dictDPs" : {"1":1, "2":0, "3":1}},
                    "A4C1383C8034": {"state": 2, "dictDPs" : {"1":1, "2":0, "3":1}}
                },
            }
        - Mỗi khi có bản tin do service CORE gửi lên, service AWS sẽ gộp các bản tin này theo
          từng pageIndex và từng deviceId theo cấu trúc trên.
        - Dùng 1 task Aws_SendMergePayload chạy mỗi 300ms để đọc và gửi tất cả các bản tin
          trong object g_mergePayloads lên cloud